/*
 * Farmer's Markets - OpenAPI 3.0
 *
 * Does cool stuff
 *
 * OpenAPI spec version: 1.0.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FarmersMarketsApiController : ControllerBase
    { 
        /// <summary>
        /// Gets all farmers markets
        /// </summary>
        /// <response code="200">successful operation</response>
        /// <response code="500">Unexpected error occurred</response>
        [HttpGet]
        [Route("/farmersMarkets")]
        [ValidateModelState]
        [SwaggerOperation("GetFarmersMarkets")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ModelApiResponse>), description: "successful operation")]
        [SwaggerResponse(statusCode: 500, type: typeof(ModelApiResponse), description: "Unexpected error occurred")]
        public virtual IActionResult GetFarmersMarkets()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ModelApiResponse>));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ModelApiResponse));
            string exampleJson = null;
            exampleJson = "[ {\n  \"code\" : 0,\n  \"FarmersMarkets\" : [ {\n    \"zipCode\" : \"zipCode\",\n    \"isSnapFriendly\" : true,\n    \"website\" : \"website\",\n    \"operatingDays\" : \"operatingDays\",\n    \"operatingMonths\" : \"operatingMonths\",\n    \"city\" : \"city\",\n    \"socialMedia\" : [ {\n      \"links\" : \"links\"\n    }, {\n      \"links\" : \"links\"\n    } ],\n    \"Name\" : \"Name\",\n    \"phone\" : \"phone\",\n    \"streetAddress\" : \"streetAddress\",\n    \"operatingHours\" : \"operatingHours\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"state\" : \"state\",\n    \"email\" : \"\"\n  }, {\n    \"zipCode\" : \"zipCode\",\n    \"isSnapFriendly\" : true,\n    \"website\" : \"website\",\n    \"operatingDays\" : \"operatingDays\",\n    \"operatingMonths\" : \"operatingMonths\",\n    \"city\" : \"city\",\n    \"socialMedia\" : [ {\n      \"links\" : \"links\"\n    }, {\n      \"links\" : \"links\"\n    } ],\n    \"Name\" : \"Name\",\n    \"phone\" : \"phone\",\n    \"streetAddress\" : \"streetAddress\",\n    \"operatingHours\" : \"operatingHours\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"state\" : \"state\",\n    \"email\" : \"\"\n  } ],\n  \"message\" : \"message\"\n}, {\n  \"code\" : 0,\n  \"FarmersMarkets\" : [ {\n    \"zipCode\" : \"zipCode\",\n    \"isSnapFriendly\" : true,\n    \"website\" : \"website\",\n    \"operatingDays\" : \"operatingDays\",\n    \"operatingMonths\" : \"operatingMonths\",\n    \"city\" : \"city\",\n    \"socialMedia\" : [ {\n      \"links\" : \"links\"\n    }, {\n      \"links\" : \"links\"\n    } ],\n    \"Name\" : \"Name\",\n    \"phone\" : \"phone\",\n    \"streetAddress\" : \"streetAddress\",\n    \"operatingHours\" : \"operatingHours\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"state\" : \"state\",\n    \"email\" : \"\"\n  }, {\n    \"zipCode\" : \"zipCode\",\n    \"isSnapFriendly\" : true,\n    \"website\" : \"website\",\n    \"operatingDays\" : \"operatingDays\",\n    \"operatingMonths\" : \"operatingMonths\",\n    \"city\" : \"city\",\n    \"socialMedia\" : [ {\n      \"links\" : \"links\"\n    }, {\n      \"links\" : \"links\"\n    } ],\n    \"Name\" : \"Name\",\n    \"phone\" : \"phone\",\n    \"streetAddress\" : \"streetAddress\",\n    \"operatingHours\" : \"operatingHours\",\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"state\" : \"state\",\n    \"email\" : \"\"\n  } ],\n  \"message\" : \"message\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ModelApiResponse>>(exampleJson)
                        : default(List<ModelApiResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all Farmers Markets with within the specified state
        /// </summary>
        /// <remarks>Returns a collecction of farmers markets</remarks>
        /// <param name="state">state for user</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid State</response>
        /// <response code="404">No Farmers Markets taht accepts SNAP</response>
        /// <response code="500">Unexpected error occurred</response>
        [HttpGet]
        [Route("/farmersMarkets/{state:alpha}")]
        [ValidateModelState]
        [SwaggerOperation("GetFarmersMarketsByState")]
        [SwaggerResponse(statusCode: 200, type: typeof(ModelApiResponse), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ModelApiResponse), description: "Invalid State")]
        [SwaggerResponse(statusCode: 404, type: typeof(ModelApiResponse), description: "No Farmers Markets taht accepts SNAP")]
        [SwaggerResponse(statusCode: 500, type: typeof(ModelApiResponse), description: "Unexpected error occurred")]
        public virtual IActionResult GetFarmersMarketsByState([FromRoute][Required][StringLength(2, MinimumLength=2)] string state)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ModelApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ModelApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ModelApiResponse));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ModelApiResponse));
                    //TODO: Change the data returned
            return new ObjectResult(new List<ModelApiResponse>());
        }

        /// <summary>
        /// Gets all Farmers Markets with 25 miles
        /// </summary>
        /// <remarks>Returns a collecction of farmers markets</remarks>
        /// <param name="zipCode">zip code for user</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid Zip Code</response>
        /// <response code="404">No Farmers Markets taht accepts SNAP</response>
        /// <response code="500">Unexpected error occurred</response>
        [HttpGet]
        [Route("/farmersMarkets/{zipCode:length(5,5)}")]
        [ValidateModelState]
        [SwaggerOperation("GetFarmersMarketsByZipcode")]
        [SwaggerResponse(statusCode: 200, type: typeof(ModelApiResponse), description: "successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ModelApiResponse), description: "Invalid Zip Code")]
        [SwaggerResponse(statusCode: 500, type: typeof(ModelApiResponse), description: "Unexpected error occurred")]
        public virtual IActionResult GetFarmersMarketsByZipcode([FromRoute][Required] string zipCode)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ModelApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ModelApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ModelApiResponse));
            return new ObjectResult(new List<ModelApiResponse>());
        }
    }
}
